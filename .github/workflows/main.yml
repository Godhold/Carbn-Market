name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  BACKEND_IMAGE: carbn-market-backend
  DATABASE_IMAGE: carbn-market-database
  BLOCKCHAIN_IMAGE: carbn-market-blockchain
  MONITORING_IMAGE: carbn-market-monitoring

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: |
        npm install eslint eslint-config-airbnb-base eslint-plugin-import --save-dev
        npx eslint "Backend/**/*.js" "blockchain/**/*.js"
        
    - name: Run tests with coverage
      run: npm test
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Convert owner to lowercase
      run: |
        echo "OWNER_LOWER=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
    
    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./Backend
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}
        
    - name: Build and push Database
      uses: docker/build-push-action@v4
      with:
        context: ./database
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/${{ env.DATABASE_IMAGE }}:${{ github.sha }}
        
    - name: Build and push Blockchain
      uses: docker/build-push-action@v4
      with:
        context: ./blockchain
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/${{ env.BLOCKCHAIN_IMAGE }}:${{ github.sha }}
        
    - name: Build and push Monitoring
      uses: docker/build-push-action@v4
      with:
        context: ./monitoring
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/${{ env.MONITORING_IMAGE }}:${{ github.sha }}

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yml
        export KUBECONFIG=kubeconfig.yml
        
    - name: Convert owner to lowercase
      run: |
        echo "OWNER_LOWER=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
        
    - name: Update image tags
      run: |
        cd k8s
        kustomize edit set image backend=${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}
        kustomize edit set image database=${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/${{ env.DATABASE_IMAGE }}:${{ github.sha }}
        kustomize edit set image blockchain=${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/${{ env.BLOCKCHAIN_IMAGE }}:${{ github.sha }}
        kustomize edit set image monitoring=${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/${{ env.MONITORING_IMAGE }}:${{ github.sha }}
        
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -k k8s/
        kubectl rollout status deployment/carbon-backend -n carbon-market
        kubectl rollout status statefulset/carbon-db -n carbon-market
        kubectl rollout status deployment/carbon-monitoring -n carbon-market
        kubectl rollout status statefulset/carbon-blockchain -n carbon-market
